{"version":3,"file":"js/639.9872a3aa.js","mappings":"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","sources":["webpack://antgo-web/./src/components/Browser.vue","webpack://antgo-web/src/components/Browser.vue","webpack://antgo-web/./src/components/Browser.vue?9328","webpack://antgo-web/./src/components/Browser.vue?9641"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-container',{staticStyle:{\"margin-top\":\"30px\"}},[(_vm.samples_num > 0)?_c('b-progress',{attrs:{\"value\":_vm.index+1,\"max\":_vm.samples_num,\"show-progress\":\"\",\"animated\":\"\"}}):_vm._e(),_c('b-container',{staticStyle:{\"margin-top\":\"30px\",\"margin-bottom\":\"30px\",\"display\":\"flex\",\"flex-wrap\":\"nowrap\",\"justify-content\":\"center\",\"flex-direction\":\"row\",\"align-items\":\"center\"}},[_c('b-button-group',{staticStyle:{\"margin-right\":\"30px\"}},[_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":function($event){return _vm.prev()}}},[_vm._v(\"上一个\")]),_c('b-button',{attrs:{\"variant\":\"warning\"},on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\"下一个\")])],1),_c('div',[_c('b-badge',{attrs:{\"href\":\"#\",\"variant\":\"secondary\"}},[_vm._v(\"索引 \"+_vm._s(_vm.index))])],1)],1),_c('b-container',[_c('b-row',{staticStyle:{\"margin-bottom\":\"20px\"}},_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_vm._v(\" \"+_vm._s(sample['title'])+\" \")])}),1),_c('b-row',{staticStyle:{\"margin-bottom\":\"20px\"}},_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[(sample['type'] == 'IMAGE')?_c('div',{staticStyle:{\"width\":\"800px\",\"height\":\"600px\"}},[_c('canvas',{staticStyle:{\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"100%\",\"max-height\":\"100%\"},attrs:{\"id\":'canvas_'+sample_i}})]):_c('div',[_vm._v(\" \"+_vm._s(sample['data'])+\" \")])])}),1),_c('b-row',{staticStyle:{\"margin-bottom\":\"20px\"}},_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('b-form-group',[_c('b-form-checkbox-group',{model:{value:(sample['tag']),callback:function ($$v) {_vm.$set(sample, 'tag', $$v)},expression:\"sample['tag']\"}},_vm._l((_vm.tags),function(tag,tag_i){return _c('b-form-checkbox',{key:tag_i,attrs:{\"value\":tag}},[_vm._v(_vm._s(tag))])}),1)],1)],1)}),1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container style=\"margin-top:30px\">\n    <b-progress v-if=\"samples_num > 0\" :value=\"index+1\" :max=\"samples_num\" show-progress animated></b-progress>\n\n    <b-container style=\"margin-top: 30px; margin-bottom: 30px; display: flex; flex-wrap: nowrap; justify-content: center; flex-direction: row; align-items: center;\">\n        <b-button-group style=\"margin-right: 30px\">\n            <b-button variant=\"success\" @click=\"prev()\">上一个</b-button>\n            <b-button variant=\"warning\" @click=\"next()\">下一个</b-button>\n        </b-button-group>\n        <div>\n            <b-badge href=\"#\" variant=\"secondary\">索引 {{index}}</b-badge>\n        </div>\n    </b-container>\n    \n    <b-container>\n        <b-row style=\"margin-bottom: 20px\">\n            <!-- variable name -->\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                {{sample['title']}}\n            </b-col>\n        </b-row>\n        <b-row style=\"margin-bottom: 20px\">\n            \n\n            <!-- variable -->\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                <div v-if=\"sample['type'] == 'IMAGE'\" style=\"width: 800px; height: 600px\">\n                    <canvas :id=\"'canvas_'+sample_i\" style=\"width: auto;height:auto; max-width:100%;max-height:100%;\"></canvas>\n                </div>\n                <div v-else>\n                    {{sample['data']}}\n                </div>\n            </b-col>\n        </b-row>\n        <b-row style=\"margin-bottom: 20px\">\n            <!-- variable tags -->\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                <b-form-group>\n                <b-form-checkbox-group v-model=\"sample['tag']\">\n                    <b-form-checkbox :value=\"tag\" v-for=\"(tag, tag_i) in tags\" :key=\"tag_i\">{{tag}}</b-form-checkbox>\n                </b-form-checkbox-group>\n                </b-form-group>\n            </b-col>\n        </b-row>\n    </b-container>\n\n    </b-container>\n</template>\n\n<script>\nexport default{\n    name: 'Browser',\n    data(){\n        return {\n            samples_num: 0,\n            index: 0,\n            samples:[],\n            tags:[],\n            color_map: ['#00BFFF', '#00F5FF', '#7FFFD4', '#54FF9F', '#00FF00', '#FFF68F', '#FFFFE0', '#FFFF00', '#FFD700', '#FFC1C1']\n        }\n    },\n    mounted: function(){\n        var _this = this;\n        _this.axios.get('/antgo/api/browser/sample/entry/').then(function(res){\n            _this.samples = res.data.content['value'];\n            _this.index = res.data.content['step'];\n            _this.tags = res.data.content['tags'];\n            _this.samples_num = res.data.content['samples_num'];\n\n            _this.freshsamples()\n        }).catch(function(error){\n            // do nothing\n            console.log(error)\n            _this.index = -1;\n        })\n    },\n    methods:{\n        prev: function(){\n            var _this = this;\n            _this.axios.get('/antgo/api/browser/sample/prev/', {\n                params:{\n                    'step': _this.index,\n                    'data': JSON.stringify(_this.samples)           \n                }\n            }).then(function(res){\n                _this.samples = res.data.content['value'];\n                _this.index = res.data.content['step'];\n                _this.tags = res.data.content['tags']\n                _this.freshsamples()\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })\n        },\n        next: function(){\n            var _this = this;\n            _this.axios.get('/antgo/api/browser/sample/next/', {\n                params:{\n                    'step': _this.index,\n                    'data': JSON.stringify(_this.samples)\n                }\n            }).then(function(res){\n                _this.samples = res.data.content['value'];\n                _this.index = res.data.content['step'];\n                _this.tags = res.data.content['tags']\n                _this.freshsamples()\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })\n        },\n        freshsamples: function(){\n            this.$nextTick(() => {\n                // 为每个需要进行图片展示的样本创建canvas\n                var _this = this;\n                for(var index in _this.samples){\n                    if(_this.samples[index]['type'] == 'IMAGE'){\n                        var canvas = document.getElementById('canvas_'+index);\n                        var context = canvas.getContext('2d')\n\n                        var img = new Image()\n                        img.src = this.samples[index]['data']\n                        img.onload = function(){\n                            if(img.complete){\n                                // 根据图像重新设定了canvas的长宽\n                                canvas.setAttribute(\"width\", img.width)\n                                canvas.setAttribute(\"height\", img.height)\n                                // 绘制图片\n                                context.drawImage(img,0,0,img.width,img.height)\n                                \n                                if('bboxes' in _this.samples[index]){\n                                    // 绘制矩形框信息     \n                                    if('labels' in _this.samples[index] && _this.samples[index]['labels'].length > 0){\n                                        // 根据类别 设置不同颜色\n                                        for(var box_t_i in _this.samples[index]['bboxes']){\n                                            var box_t_xyxy = _this.samples[index]['bboxes'][box_t_i];\n                                            var box_label = _this.samples[index]['labels'][box_t_i];\n                                            box_label = parseInt(box_label);\n                                            var t_color = _this.color_map[box_label];\n\n                                            _this.drawRectWithText(context, box_t_xyxy[0],box_t_xyxy[1],box_t_xyxy[2]-box_t_xyxy[0],box_t_xyxy[3]-box_t_xyxy[1], t_color, box_label)\n                                        }\n                                    }\n                                    else{\n                                        // 使用统一颜色\n                                        for(var box_i in _this.samples[index]['bboxes']){\n                                            var box_xyxy = _this.samples[index]['bboxes'][box_i];\n                                            var color = _this.color_map[0];\n                                            _this.drawRect(context, box_xyxy[0],box_xyxy[1],box_xyxy[2]-box_xyxy[0],box_xyxy[3]-box_xyxy[1],color)\n                                        }                                        \n                                    }\n                                }                               \n                            }\n                        }\n                    }\n                }\n            })\n        },\n        drawRect: function(context, x, y, lineW, lineY, color) {\n            context.beginPath();\n            context.strokeStyle = color;\n            context.lineWidth = 2;\n            context.strokeRect(x, y, lineW, lineY);\n        },        \n        drawRectWithText: function(context, x,y,lineW,lineY, color, text){\n            this.drawRect(context, x,y,lineW,lineY, color);\n            \n            // 绘制文本\n            context.fillStyle = color\n            if(y <= 10){\n                context.fillText(text, x+10, y+10)\n            }\n            else{\n                context.fillText(text, x+10, y-10)\n            }\n        },\n        drawSegment: function(context, points, color){\n\n        },\n        drawSkeleton: function(content, points, skeleton, colors){\n\n        }\n    }\n}\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Browser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Browser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Browser.vue?vue&type=template&id=2b60dfb2&scoped=true&\"\nimport script from \"./Browser.vue?vue&type=script&lang=js&\"\nexport * from \"./Browser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2b60dfb2\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","samples_num","attrs","index","_e","on","$event","prev","_v","next","_s","_l","samples","sample","sample_i","key","model","value","callback","$$v","$set","expression","tags","tag","tag_i","staticRenderFns","name","data","color_map","mounted","_this","catch","console","methods","params","then","freshsamples","img","canvas","context","box_label","drawRect","drawRectWithText","drawSegment","drawSkeleton","component"],"sourceRoot":""}