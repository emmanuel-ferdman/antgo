{"version":3,"file":"js/778.f9a5c084.js","mappings":"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","sources":["webpack://antgo-web/./src/components/Browser.vue","webpack://antgo-web/src/components/Browser.vue","webpack://antgo-web/./src/components/Browser.vue?49d3","webpack://antgo-web/./src/components/Browser.vue?7ddf"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-container',{staticStyle:{\"margin-top\":\"30px\"}},[_c('b-container',[(_vm.samples_num > 0)?_c('b-progress',{attrs:{\"value\":_vm.index+1,\"max\":_vm.samples_num,\"show-progress\":\"\",\"animated\":\"\"}}):_vm._e()],1),_c('b-badge',{attrs:{\"href\":\"#\",\"variant\":\"secondary\"}},[_vm._v(\"索引 \"+_vm._s(_vm.index)+\"/\"+_vm._s(_vm.samples_num))]),_c('b-container',[_c('b-row',{staticStyle:{\"margin-bottom\":\"20px\"}},_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('h5',[_vm._v(\" 名称：\"+_vm._s(sample['title']))])])}),1),_c('b-row',_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[(sample['type'] == 'IMAGE')?_c('div',{staticStyle:{\"width\":\"800px\",\"height\":\"100%\"}},[_c('canvas',{staticStyle:{\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"100%\",\"max-height\":\"100%\"},attrs:{\"id\":'canvas_'+sample_i}})]):_c('div',[_vm._v(\" \"+_vm._s(sample['data'])+\" \")])])}),1),(_vm.tags.length > 0)?_c('b-row',_vm._l((_vm.samples),function(sample,sample_i){return _c('b-col',{key:sample_i,staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\"}},[_c('b-form-group',[_c('b-form-checkbox-group',{model:{value:(sample['tag']),callback:function ($$v) {_vm.$set(sample, 'tag', $$v)},expression:\"sample['tag']\"}},_vm._l((_vm.tags),function(tag,tag_i){return _c('b-form-checkbox',{key:tag_i,attrs:{\"value\":tag}},[_vm._v(_vm._s(tag))])}),1)],1)],1)}),1):_vm._e(),_c('b-row',{staticStyle:{\"margin-top\":\"10px\",\"display\":\"flex\",\"flex-wrap\":\"nowrap\",\"justify-content\":\"center\",\"flex-direction\":\"row\",\"align-items\":\"center\"}},[_c('b-button-group',[_c('b-button',{staticClass:\"btn btn-default\",on:{\"click\":function($event){return _vm.prev()}}},[_vm._v(\"上一个\")]),_c('b-button',{staticClass:\"btn btn-default\",on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\"下一个\")]),_c('b-button',{staticClass:\"btn btn-default\",on:{\"click\":function($event){return _vm.randomone()}}},[_vm._v(\"随机\")])],1)],1)],1),_c('b-container',{staticStyle:{\"margin-top\":\"10px\",\"display\":\"flex\",\"flex-wrap\":\"nowrap\",\"justify-content\":\"center\",\"flex-direction\":\"row\",\"align-items\":\"center\"}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <b-container style=\"margin-top:30px\">\n        <b-container >\n            <b-progress v-if=\"samples_num > 0\" :value=\"index+1\" :max=\"samples_num\" show-progress animated></b-progress>\n        </b-container>\n        <b-badge href=\"#\" variant=\"secondary\">索引 {{index}}/{{ samples_num }}</b-badge>\n\n    <b-container> \n        <b-row style=\"margin-bottom: 20px\">\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                <h5> 名称：{{sample['title']}}</h5>\n            </b-col>\n        </b-row>\n        <b-row>\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                <div v-if=\"sample['type'] == 'IMAGE'\" style=\"width: 800px; height: 100%\">\n                    <canvas :id=\"'canvas_'+sample_i\" style=\"width: auto;height:auto; max-width:100%;max-height:100%;\"></canvas>\n                </div>\n                <div v-else>\n                    {{sample['data']}}\n                </div>\n            </b-col>\n        </b-row>\n        <b-row v-if=\"tags.length > 0\">\n            <b-col v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" style=\"display: flex;justify-content: center;\">\n                <b-form-group>\n                <b-form-checkbox-group v-model=\"sample['tag']\">\n                    <b-form-checkbox :value=\"tag\" v-for=\"(tag, tag_i) in tags\" :key=\"tag_i\">{{tag}}</b-form-checkbox>\n                </b-form-checkbox-group>\n                </b-form-group>\n            </b-col>\n        </b-row>\n        \n        <b-row style=\"margin-top:10px; display: flex; flex-wrap: nowrap; justify-content: center; flex-direction: row; align-items: center;\">\n            <b-button-group>\n            <b-button class=\"btn btn-default\" @click=\"prev()\">上一个</b-button>\n            <b-button class=\"btn btn-default\" @click=\"next()\">下一个</b-button>\n            <b-button class=\"btn btn-default\" @click=\"randomone()\">随机</b-button>\n     \n        </b-button-group>     \n        </b-row>\n\n    </b-container>\n\n    <b-container style=\"margin-top:10px; display: flex; flex-wrap: nowrap; justify-content: center; flex-direction: row; align-items: center;\">\n\n    </b-container>\n\n\n    </b-container>\n</template>\n\n<script>\nexport default{\n    name: 'Browser',\n    data(){\n        return {\n            samples_num: 0,\n            index: 0,\n            samples:[],\n            tags:[],\n            color_map: ['#00BFFF', '#00F5FF', '#7FFFD4', '#54FF9F', '#00FF00', '#FFF68F', '#FFFFE0', '#FFFF00', '#FFD700', '#FFC1C1']\n        }\n    },\n    mounted: function(){\n        var _this = this;\n        this.$route.query.input\n        _this.axios.get('/antgo/api/browser/sample/entry/',  {params:{\n            input: this.$route.query.input,\n            }}).then(function(res){\n            _this.samples = res.data.content['value'];\n            _this.index = res.data.content['step'];\n            _this.tags = res.data.content['tags'];\n            _this.samples_num = res.data.content['samples_num'];\n\n            _this.freshsamples()\n        }).catch(function(error){\n            // do nothing\n            console.log(error)\n            _this.index = -1;\n        })\n    },\n    methods:{\n        prev: function(){\n            var _this = this;\n            _this.axios.get('/antgo/api/browser/sample/prev/', {\n                params:{\n                    'step': _this.index,\n                    'data': JSON.stringify(_this.samples)           \n                }\n            }).then(function(res){\n                _this.samples = res.data.content['value'];\n                _this.index = res.data.content['step'];\n                _this.tags = res.data.content['tags']\n                _this.freshsamples()\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })\n        },\n        next: function(){\n            var _this = this;\n            _this.axios.get('/antgo/api/browser/sample/next/', {\n                params:{\n                    'step': _this.index,\n                    'data': JSON.stringify(_this.samples)\n                }\n            }).then(function(res){\n                _this.samples = res.data.content['value'];\n                _this.index = res.data.content['step'];\n                _this.tags = res.data.content['tags']\n                _this.freshsamples()\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })\n        },\n        randomone: function(){\n            var _this = this;\n            _this.axios.get('/antgo/api/browser/sample/random/', {\n                params:{\n                    'step': _this.index,\n                    'data': JSON.stringify(_this.samples)\n                }\n            }).then(function(res){\n                _this.samples = res.data.content['value'];\n                _this.index = res.data.content['step'];\n                _this.tags = res.data.content['tags']\n                _this.freshsamples()\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })\n        },\n        freshsamples: function(){\n            this.$nextTick(() => {\n                // 为每个需要进行图片展示的样本创建canvas\n                var _this = this;\n                for(var index in _this.samples){\n                    if(_this.samples[index]['type'] == 'IMAGE'){\n                        var show_image = new Image()\n                        show_image.src = this.samples[index]['data']                        \n                        show_image.onload = (function(_index, img){\n\n                            return function(){\n                                var canvas = document.getElementById('canvas_'+_index);\n                                var context = canvas.getContext('2d')\n                                canvas.setAttribute(\"width\", img.width)\n                                canvas.setAttribute(\"height\", img.height)\n                                // 绘制图片\n                                context.drawImage(img,0,0,img.width,img.height)\n                                \n                                // 绘制矩形框\n                                if('bboxes' in _this.samples[_index]){\n                                    // 绘制矩形框信息     \n                                    if('labels' in _this.samples[_index] && _this.samples[_index]['labels'].length > 0){\n                                        // 根据类别 设置不同颜色\n                                        for(var box_t_i in _this.samples[_index]['bboxes']){\n                                            var box_t_xyxy = _this.samples[_index]['bboxes'][box_t_i];\n                                            var box_label = _this.samples[_index]['labels'][box_t_i];\n                                            box_label = parseInt(box_label);\n                                            var t_color = _this.color_map[box_label];\n\n                                            _this.drawRectWithText(context, box_t_xyxy[0],box_t_xyxy[1],box_t_xyxy[2]-box_t_xyxy[0],box_t_xyxy[3]-box_t_xyxy[1], t_color, box_label)\n                                        }\n                                    }\n                                    else{\n                                        // 使用统一颜色\n                                        for(var box_i in _this.samples[_index]['bboxes']){\n                                            var box_xyxy = _this.samples[_index]['bboxes'][box_i];\n                                            var color = _this.color_map[0];\n                                            _this.drawRect(context, box_xyxy[0],box_xyxy[1],box_xyxy[2]-box_xyxy[0],box_xyxy[3]-box_xyxy[1],color)\n                                        }                                        \n                                    }\n                                }\n                                \n                                // 绘制多边形\n                                if('segments' in _this.samples[_index]){\n                                    // 绘制多边形信息     \n                                    if('labels' in _this.samples[_index] && _this.samples[_index]['labels'].length > 0){\n                                        // 根据类别 设置不同颜色\n                                        for(var seg_t_i in _this.samples[_index]['segments']){\n                                            var seg_t_points = _this.samples[_index]['segments'][seg_t_i];\n                                            var seg_t_label = _this.samples[_index]['labels'][seg_t_i];\n                                            seg_t_label = parseInt(seg_t_label);\n                                            var seg_t_color = _this.color_map[seg_t_label];\n\n                                            _this.drawSegment(context, seg_t_points, seg_t_color, seg_t_label);\n                                        }\n                                    }\n                                    else{\n                                        // 使用统一颜色\n                                        for(var seg_i in _this.samples[_index]['segments']){\n                                            var seg_points = _this.samples[_index]['segments'][seg_i];\n                                            var seg_color = _this.color_map[0];\n                                            _this.drawSegment(context, seg_points, seg_color, '');\n                                        }                                        \n                                    }\n                                }\n                                \n                                // 绘制2D线或点\n                                if('joints2d' in _this.samples[_index]){\n                                    // 3d 点也会转换成2d进入这里进行绘制\n                                    // skeleton,joints2d\n                                    if('skeleton' in _this.samples[_index]){\n                                        // 使用skeleton绘制线\n                                        var bone_num = _this.samples[_index]['skeleton'].length\n                                        var bone_colors = []\n                                        for(var bone_i in _this.samples[_index]['skeleton']){\n                                            bone_i = bone_i % _this.color_map.length;\n                                            bone_colors.push(_this.color_map[bone_i])\n                                        }\n\n                                        _this.drawSkeleton(context, _this.samples[_index]['joints2d'], _this.samples[_index]['skeleton'], bone_colors)\n                                    }\n                                    else{\n                                        // 绘制点\n                                        _this.drawPoint(context, _this.samples[_index]['joints2d'])\n                                    }\n                                }\n                            }\n                        })(index, show_image);\n                    }\n                }\n            })\n        },\n        drawRect: function(context, x, y, lineW, lineY, color) {\n            context.beginPath();\n            context.strokeStyle = color;\n            context.lineWidth = 2;\n            context.strokeRect(x, y, lineW, lineY);\n\n            context.fillStyle = \"rgba(255,255,255,0.5)\";\n            context.fillRect(x, y, lineW, lineY);\n        },        \n        drawRectWithText: function(context, x,y,lineW,lineY, color, text){\n            this.drawRect(context, x,y,lineW,lineY, color);\n            \n            // 绘制文本\n            context.fillStyle = color\n            context.font = '20px Georgia'\n            if(y <= 10){\n                context.fillText(text, x+10, y+10)\n            }\n            else{\n                context.fillText(text, x+10, y-10)\n            }\n        },\n        drawSegment: function(context, points, color, text){\n            context.beginPath();\n            for(var i=0; i<points.length; ++i){\n                context.lineTo(points[i][0], points[i][1]);//绘制路径\n            }\n            \n            var cx = 0;\n            var cy = 0;\n            for(var j=0; j<points.length; ++j){\n                cx += points[j][0];\n                cy += points[j][1];\n            }\n            cx = cx/points.length;\n            cy = cy/points.length;\n            context.font = '20px Georgia'\n            context.fillText(text, cx, cy)\n\n            context.closePath();//闭合路径，也可在for循环中多一次循环lineTo()至起点\n            context.strokeStyle = color;\n            context.lineWidth = 4;\n            context.stroke()\n            context.fillStyle = \"rgba(255,255,255,0.5)\";\n            context.fill()\n        },\n        drawSkeleton: function(context, points, skeleton, colors){\n            for(var obj_i=0; obj_i<points.length; ++obj_i){\n                for(var bone_i=0; bone_i<skeleton.length; ++bone_i){\n                var bone_from_i = skeleton[bone_i][0];\n                var bone_to_j = skeleton[bone_i][1];\n\n                var bone_from_x = points[obj_i][bone_from_i][0];\n                var bone_from_y = points[obj_i][bone_from_i][1];\n                var bone_to_x = points[obj_i][bone_to_j][0];\n                var bone_to_y = points[obj_i][bone_to_j][1];           \n                \n                var bone_color = colors[bone_i%colors.length];\n                \n                context.beginPath();\n                context.moveTo(bone_from_x, bone_from_y);\n                context.lineTo(bone_to_x, bone_to_y);\n                context.closePath();\n                context.strokeStyle = bone_color;\n                context.lineWidth = 1;\n                \n                context.stroke()\n            }\n            }\n        },\n        drawPoint: function(context, points){\n            for(var obj_i=0; obj_i<points.length; ++obj_i){\n                for(var point_i=0; point_i<points[obj_i].length; ++point_i){\n                    var p_x = points[obj_i][point_i][0];\n                    var p_y = points[obj_i][point_i][1];\n                    context.beginPath();\n                    context.fillStyle = 'red';\n                    context.arc(p_x,p_y,4,2*Math.PI,true);\n                    context.closePath();\n                    context.fill();\n                }\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n</style>","import mod from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.3.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./Browser.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/.store/thread-loader@3.0.4/node_modules/thread-loader/dist/cjs.js!../../node_modules/.store/babel-loader@8.3.0/node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/index.js??vue-loader-options!./Browser.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./Browser.vue?vue&type=template&id=357730e0&scoped=true\"\nimport script from \"./Browser.vue?vue&type=script&lang=js\"\nexport * from \"./Browser.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/.store/vue-loader@15.11.1/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"357730e0\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","samples_num","attrs","index","_e","_v","_s","_l","samples","sample","sample_i","key","tags","length","model","value","callback","$$v","$set","expression","tag","tag_i","staticClass","on","$event","prev","next","randomone","staticRenderFns","name","data","color_map","mounted","_this","$route","query","input","axios","get","params","then","res","content","freshsamples","catch","error","console","log","methods","JSON","stringify","$nextTick","show_image","Image","src","onload","_index","img","canvas","document","getElementById","context","getContext","setAttribute","width","height","drawImage","box_t_i","box_t_xyxy","box_label","parseInt","t_color","drawRectWithText","box_i","box_xyxy","color","drawRect","seg_t_i","seg_t_points","seg_t_label","seg_t_color","drawSegment","seg_i","seg_points","seg_color","bone_colors","bone_i","push","drawSkeleton","drawPoint","x","y","lineW","lineY","beginPath","strokeStyle","lineWidth","strokeRect","fillStyle","fillRect","text","font","fillText","points","i","lineTo","cx","cy","j","closePath","stroke","fill","skeleton","colors","obj_i","bone_from_i","bone_to_j","bone_from_x","bone_from_y","bone_to_x","bone_to_y","bone_color","moveTo","point_i","p_x","p_y","arc","Math","PI","component"],"sourceRoot":""}