{"version":3,"file":"js/359.8010dd5e.js","mappings":"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","sources":["webpack://antgo-web/./src/components/Label.vue","webpack://antgo-web/src/components/Label.vue","webpack://antgo-web/./src/components/Label.vue?c428","webpack://antgo-web/./src/components/Label.vue?abe6"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('b-container',[_c('b-row',[_c('b-col',{ref:\"samplelistcontent\",staticStyle:{\"height\":\"800px\",\"overflow-y\":\"scroll\"},attrs:{\"cols\":\"4\"}},[_c('b-container',[_c('b-row',{staticStyle:{\"border-bottom\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('b-col',{staticClass:\"m-md-2\",staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" ID \")])]),_c('b-col',{staticClass:\"m-md-2\",staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('b-icon',{attrs:{\"icon\":\"bounding-box-circles\",\"scale\":\"1\",\"variant\":\"info\"}})],1)]),_c('b-col',{staticClass:\"m-md-2\",staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" 图片 \")])]),_c('b-col',{staticClass:\"m-md-2\"},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" 信息 \")])])],1),_vm._l((_vm.samples),function(sample,sample_i){return _c('b-row',{key:sample_i,staticClass:\"row_activate\",class:{'row_activate_selected': sample_i==_vm.activate_sample['sample_id']},on:{\"click\":function($event){return _vm.select(sample['sample_id'])}}},[_c('b-col',[_c('div',{staticClass:\"dm-table__cell\",staticStyle:{\"margin-top\":\"7px\"}},[_c('div',{staticStyle:{\"width\":\"20px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" \"+_vm._s(sample['sample_id'])+\" \")])])]),_c('b-col',[_c('div',{staticClass:\"dm-table__cell\",staticStyle:{\"margin-top\":\"7px\"}},[(sample['state'] != 'completed')?_c('div',{staticStyle:{\"width\":\"5px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" \"+_vm._s(sample['label_info'].length)+\" \")]):_c('div',{staticStyle:{\"width\":\"5px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\",\"color\":\"red\",\"font-weight\":\"bold\"}},[_vm._v(\" \"+_vm._s(sample['label_info'].length)+\" \")])])]),_c('b-col',[_c('div',{staticClass:\"dm-table__cell\"},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('img',{attrs:{\"src\":sample['image_file'],\"width\":\"40\",\"height\":\"40\"}})])])]),_c('b-col',[_c('div',{staticClass:\"dm-table__cell\",staticStyle:{\"margin-top\":\"7px\"}},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('b-icon',{staticStyle:{\"cursor\":\"pointer\"},attrs:{\"icon\":\"code-slash\",\"scale\":\"1\",\"variant\":\"info\"}})],1)])])],1)})],2)],1),_c('b-col',{staticStyle:{\"border-left\":\"1px solid rgba(0, 0, 0, 0.1)\"},attrs:{\"cols\":\"8\"}},[_c('b-container',[_c('b-row',{staticStyle:{\"border-bottom\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('b-col',{staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\",\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"dm-table__cell\"},[_c('div',{staticStyle:{\"width\":\"40px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_vm._v(\" #\"+_vm._s(_vm.activate_sample['sample_id'])+\" \")])])]),_c('b-col',{staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\"}},[_c('div',{staticClass:\"dm-table__cell\"},[_c('div',{staticStyle:{\"width\":\"200px\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('div',{staticClass:\"lsf-space lsf-space_direction_horizontal lsf-space_size_small\"},[_c('div',{staticClass:\"lsf-userpic lsf-annotations-list__userpic\",staticStyle:{\"background\":\"rgb(179, 218, 216)\",\"color\":\"rgb(0, 0, 0)\"},attrs:{\"block\":\"lsf-annotations-list\"}},[_c('img',{staticClass:\"lsf-userpic__avatar\",staticStyle:{\"opacity\":\"0\"},attrs:{\"alt\":_vm.label_operator['full_name']}}),_c('span',{staticClass:\"lsf-userpic__username\"},[_vm._v(_vm._s(_vm.label_operator['short_name']))])]),_c('div',{staticClass:\"lsf-space lsf-space_direction_vertical lsf-space_size_none\"},[_c('div',{staticClass:\"lsf-annotations-list__user\"},[_c('span',{staticClass:\"lsf-annotations-list__name\"},[_vm._v(_vm._s(_vm.label_operator['full_name']))]),_c('span',{staticClass:\"lsf-annotations-list__entity-id\"},[_vm._v(\"#\"+_vm._s(_vm.activate_sample['sample_id']))])]),(_vm.activate_sample['state'] != 'completed')?_c('div',{staticClass:\"lsf-annotations-list__created\"},[_vm._v(\"created, \"),_c('time',{staticClass:\"lsf-annotations-list__date\",attrs:{\"tag\":\"div\"}},[_vm._v(_vm._s(_vm.activate_sample['created_time']))])]):_c('div',{staticClass:\"lsf-annotations-list__created\"},[_c('div',[_vm._v(\"completed, \"),_c('time',{staticClass:\"lsf-annotations-list__date\",attrs:{\"tag\":\"div\"}},[_vm._v(_vm._s(_vm.activate_sample['completed_time']))])]),_c('div',[_vm._v(\"update, \"),_c('time',{staticClass:\"lsf-annotations-list__date\",attrs:{\"tag\":\"div\"}},[_vm._v(_vm._s(_vm.activate_sample['update_time']))])])])])])])])]),_c('b-col',{staticStyle:{\"border-right\":\"1px solid rgba(0, 0, 0, 0.1)\",\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"dm-table__cell\",staticStyle:{\"margin-top\":\"7px\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('b-icon',{staticStyle:{\"cursor\":\"pointer\"},attrs:{\"icon\":\"trash\",\"scale\":\"2\",\"variant\":\"info\"},on:{\"click\":function($event){return _vm.remove_annotations()}}})],1)])]),_c('b-col',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"dm-table__cell\"},[_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[(_vm.activate_sample['state'] != 'completed')?_c('b-button',{staticStyle:{\"width\":\"100px\"},attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.update_annotations()}}},[_vm._v(\"提交\")]):_c('b-button',{staticStyle:{\"width\":\"100px\"},attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.update_annotations()}}},[_vm._v(\"更新\")])],1)])]),_c('b-col',{staticStyle:{\"display\":\"flex\",\"flex-direction\":\"row\",\"justify-content\":\"center\"}},[_c('div',{staticClass:\"dm-table__cell\"},[_c('div',{staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"height\":\"100%\",\"align-items\":\"center\"}},[_c('b-button',{staticStyle:{\"width\":\"100px\"},attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.next()}}},[_vm._v(\"下一个\")])],1)])])],1)],1),_c('b-container',[_c('b-row',[_c('b-col',[_c('b-container',[_c('b-row',[_c('b-col',{staticStyle:{\"height\":\"400px\"}},[_c('div',[_c('div',{attrs:{\"id\":\"label-image\"}})])])],1),_c('hr'),(_vm.label_metas['label_level']=='instance-level')?_c('b-row',_vm._l((_vm.label_metas['label_category']),function(t,index){return _c('b-col',{key:index},[(index!=_vm.label_metas['activate_label_index'])?_c('b-badge',{style:({'width': '100px', 'height': '20px', 'background-color':t['background_color'], 'color': t['color'], 'cursor': 'pointer'}),on:{\"click\":function($event){return _vm.switch_label_category(_vm.label_type,index, t)}}},[_vm._v(_vm._s(t['class_name'])+\" (\"+_vm._s(t['class_index'])+\")\")]):_c('b-badge',{style:({'width': '100px', 'height': '20px', 'background-color':'yellow', 'color': t['color'], 'cursor': 'pointer'}),on:{\"click\":function($event){return _vm.switch_label_category(_vm.label_type, index, t)}}},[_vm._v(_vm._s(t['class_name'])+\" (\"+_vm._s(t['class_index'])+\")\")])],1)}),1):_c('b-row',[_c('b-col',_vm._l((_vm.label_metas['label_category']),function(t,index){return _c('div',{key:index,staticClass:\"form-check\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.choices),expression:\"choices\"}],staticClass:\"form-check-input\",attrs:{\"type\":\"checkbox\"},domProps:{\"value\":t['class_name'],\"checked\":Array.isArray(_vm.choices)?_vm._i(_vm.choices,t['class_name'])>-1:(_vm.choices)},on:{\"change\":function($event){var $$a=_vm.choices,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=t['class_name'],$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.choices=$$a.concat([$$v]))}else{$$i>-1&&(_vm.choices=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.choices=$$c}}}}),_c('label',{staticClass:\"form-check-label\"},[_vm._v(\" \"+_vm._s(t['class_name'])+\" \")])])}),0)],1)],1)],1)],1)],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n<b-container>\n    <b-row >\n        <b-col cols=\"4\" style=\"height:800px; overflow-y: scroll;\" ref=\"samplelistcontent\">\n            <b-container>                \n                <b-row style=\"border-bottom: 1px solid rgba(0, 0, 0, 0.1);\">\n                    <b-col class=\"m-md-2\"  style=\"border-right: 1px solid rgba(0, 0, 0, 0.1);\">\n                        <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                        ID\n                        </div>\n                    </b-col>                \n                    <b-col class=\"m-md-2\"  style=\"border-right: 1px solid rgba(0, 0, 0, 0.1);\">\n                        <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                            <b-icon icon=\"bounding-box-circles\" scale=\"1\" variant=\"info\"></b-icon>\n                        </div>\n                    </b-col>\n                    <b-col class=\"m-md-2\"  style=\"border-right: 1px solid rgba(0, 0, 0, 0.1);\">\n                        <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                        图片\n                        </div>\n                    </b-col>\n                    <b-col class=\"m-md-2\">\n                        <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                        信息\n                        </div>\n                    </b-col>\n                </b-row>\n                <b-row v-for=\"(sample, sample_i) in samples\" :key=\"sample_i\" class=\"row_activate\" :class=\"{'row_activate_selected': sample_i==activate_sample['sample_id']}\" @click=\"select(sample['sample_id'])\">\n                    <b-col>\n                        <div class=\"dm-table__cell\" style=\"margin-top: 7px;\">\n                            <div style=\"width: 20px;display: flex;height: 100%;align-items: center;\">\n                                {{sample['sample_id']}}\n                            </div>\n                        </div>\n                    </b-col>\n                    <b-col>\n                        <div class=\"dm-table__cell\" style=\"margin-top: 7px;\">\n                            \n                            <div v-if=\"sample['state'] != 'completed'\" style=\"width: 5px;display: flex;height: 100%;align-items: center;\">\n                                {{sample['label_info'].length}}\n                            </div>\n                            <div v-else style=\"width: 5px;display: flex;height: 100%;align-items: center; color: red; font-weight: bold;\">\n                                {{sample['label_info'].length}}\n                            </div>\n                        </div>\n                    </b-col>\n                    <b-col>\n                        <div class=\"dm-table__cell\">\n                            <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                                <img :src=\"sample['image_file']\" width=\"40\" height=\"40\">\n                            </div>\n                        </div>\n                    </b-col>    \n                    <b-col>\n                        <div class=\"dm-table__cell\" style=\"margin-top: 7px;\">\n                            <div style=\"width: 40px;display: flex;height: 100%;align-items: center;\">\n                                <b-icon icon=\"code-slash\" scale=\"1\" variant=\"info\" style=\"cursor: pointer\"></b-icon>\n\n                            </div>\n                        </div>\n                    </b-col>                \n                </b-row>\n            </b-container>\n        </b-col>\n        <b-col cols=\"8\" style='border-left: 1px solid rgba(0, 0, 0, 0.1);'>\n            <b-container>\n                <b-row style=\"border-bottom: 1px solid rgba(0, 0, 0, 0.1);\">\n                    <b-col  style=\"border-right: 1px solid rgba(0, 0, 0, 0.1); display: flex; flex-direction: row; justify-content: center;\">\n                        <div class=\"dm-table__cell\">\n                            <div style=\"width: 40px; display: flex;height: 100%;align-items: center;\">\n                                #{{activate_sample['sample_id']}}\n                            </div>\n                        </div>                        \n                    </b-col>\n                    <b-col  style=\"border-right: 1px solid rgba(0, 0, 0, 0.1);\">\n                        <div class=\"dm-table__cell\">\n                        <div style=\"width: 200px;display: flex;height: 100%;align-items: center;\">\n                            <div class=\"lsf-space lsf-space_direction_horizontal lsf-space_size_small\">\n                                <div block=\"lsf-annotations-list\" class=\"lsf-userpic lsf-annotations-list__userpic\" style=\"background: rgb(179, 218, 216); color: rgb(0, 0, 0);\">\n                                    <img :alt=\"label_operator['full_name']\" class=\"lsf-userpic__avatar\" style=\"opacity: 0;\">\n                                    <span class=\"lsf-userpic__username\">{{label_operator['short_name']}}</span>\n                                </div>\n                                <div class=\"lsf-space lsf-space_direction_vertical lsf-space_size_none\">\n                                    <div class=\"lsf-annotations-list__user\">\n                                        <span class=\"lsf-annotations-list__name\">{{label_operator['full_name']}}</span>\n                                        <span class=\"lsf-annotations-list__entity-id\">#{{activate_sample['sample_id']}}</span>\n                                    </div>\n                                    \n                                    <div v-if=\"activate_sample['state'] != 'completed'\" class=\"lsf-annotations-list__created\">created,\n                                        <time class=\"lsf-annotations-list__date\" tag=\"div\">{{activate_sample['created_time']}}</time>\n                                    </div>\n                                    <!-- <div></div> -->\n                                    <div v-else class=\"lsf-annotations-list__created\">\n                                        <div >completed,\n                                            <time class=\"lsf-annotations-list__date\" tag=\"div\">{{activate_sample['completed_time']}}</time>\n                                        </div>   \n                                        <div >update,\n                                            <time class=\"lsf-annotations-list__date\" tag=\"div\">{{activate_sample['update_time']}}</time>\n                                        </div>    \n                                    </div>\n                                        \n                                </div>\n                            </div>\n                        </div>\n                        </div>\n\n                    </b-col>\n                    <b-col style=\"border-right: 1px solid rgba(0, 0, 0, 0.1); display: flex; flex-direction: row; justify-content: center;\">\n                        <div class=\"dm-table__cell\" style=\"margin-top: 7px\">\n                            <div style=\"display: flex;height: 100%;align-items: center;\">\n                                <b-icon icon=\"trash\" scale=\"2\" variant=\"info\" style=\"cursor: pointer\" @click=\"remove_annotations()\"></b-icon>\n                            </div>\n                        </div>\n\n                    </b-col>                \n                    <b-col style=\"display: flex; flex-direction: row; justify-content: center;\">\n                        <div class=\"dm-table__cell\">\n                        <div style=\"width: 100%;display: flex;height: 100%;align-items: center;\">\n\n                        <b-button v-if=\"activate_sample['state'] != 'completed'\" variant=\"primary\" style=\"width:100px\" @click=\"update_annotations()\">提交</b-button>\n                        <b-button v-else variant=\"primary\" style=\"width:100px\" @click=\"update_annotations()\">更新</b-button>\n\n                        </div>\n                        </div>\n                    </b-col>\n                    <b-col style=\"display: flex; flex-direction: row; justify-content: center;\">\n                        <div class=\"dm-table__cell\">\n                        <div style=\"width: 100%;display: flex;height: 100%;align-items: center;\">\n                        <b-button variant=\"primary\" style=\"width:100px\" @click=\"next()\">下一个</b-button>\n                        </div>\n                        </div>\n                    </b-col>                        \n                </b-row>\n            </b-container>\n\n            <b-container>\n                <b-row>\n                    <b-col>\n                        <b-container>\n                            <b-row>\n                                <b-col style=\"height:400px\">\n                                    <div >\n                                        <div id=\"label-image\"></div>\n                                    </div>\n                                </b-col>\n                            </b-row>\n                            <hr>\n                            <b-row v-if=\"label_metas['label_level']=='instance-level'\">\n                                <b-col v-for=\"(t,index) in label_metas['label_category']\" :key=\"index\">\n                                    <b-badge v-if=\"index!=label_metas['activate_label_index']\" :style=\"{'width': '100px', 'height': '20px', 'background-color':t['background_color'], 'color': t['color'], 'cursor': 'pointer'}\" @click=\"switch_label_category(label_type,index, t)\">{{t['class_name']}} ({{t['class_index']}})</b-badge>\n                                    <b-badge v-else :style=\"{'width': '100px', 'height': '20px', 'background-color':'yellow', 'color': t['color'], 'cursor': 'pointer'}\" @click=\"switch_label_category(label_type, index, t)\">{{t['class_name']}} ({{t['class_index']}})</b-badge>\n                                </b-col>\n                            </b-row>       \n                            <b-row v-else>\n                                <b-col>\n                                    <div class=\"form-check\" v-for=\"(t,index) in label_metas['label_category']\" :key=\"index\">\n                                        <input class=\"form-check-input\" type=\"checkbox\" v-model=\"choices\" :value=\"t['class_name']\">\n                                        <label class=\"form-check-label\">\n                                            {{ t['class_name'] }}\n                                        </label>\n                                    </div>                               \n                                </b-col>\n                            </b-row>                   \n                        </b-container>\n                    </b-col>\n                </b-row>\n            </b-container>\n        </b-col>\n    </b-row>\n\n</b-container>\n</template>\n\n<script>\n// eslint-disable-next-line no-unused-vars\n import AILabel from \"ailabel\";\n export default{\n    name: 'Label',\n    data() {\n        return {\n          img:require(\"../assets/logo.png\"),\n          gMap: null,                           //  AILabel实例\n          gFirstFeatureLayer: null,             //  矢量图层实例(矩形，多边形等矢量)\n          gFirstImageLayer: null,               //  图像层\n          label_metas:{\n            label_category: [],\n            label_level: '',\n            activate_label_index: -1,\n          },\n          samples:[],\n          activate_sample: {},\n          label_operator: {\n            'full_name': '',\n            'short_name': ''\n          },\n          now_page: 0,\n          page_size: 50,\n          more_show: true,\n          task_name: '',\n          task_type: '',\n          label_type: '',\n\n          choices: []\n        };\n      },\n    mounted: function(){\n        // 1.step 获得系统信息\n        var _this = this;\n        _this.axios.get('/antgo/api/label/task/').then(function(res){\n            _this.task_name = res.data.content['task_name']\n            _this.task_type = res.data.content['task_type']\n            _this.label_type = res.data.content['label_type']\n            \n            _this.label_operator = res.data.content['operator']\n            _this.label_metas['label_category'] = res.data.content['label_metas']['label_category']\n            _this.label_metas['label_level'] = res.data.content['label_metas']['level']\n            // 初始化绘图模块\n            _this.initMap();\n            // 初始化绘图模式\n            _this.setMode(_this.label_type);\n        }).catch(function(error){\n            // do nothing\n            console.log(error)\n        })\n\n        // 2.step 获取样本列表\n        // 获得初始样本列表\n        _this.scrollMore(_this.$route.params.id);\n        _this.$refs.samplelistcontent.addEventListener('scroll', this.handleScroll, true);\n\n        // 3.step 获得当前默认样本\n        _this.axios.get(\n            '/antgo/api/label/sample/get/', {\n                params: {\n                    'sample_i': _this.$route.params.id\n                }\n            }).then(function(res){\n            // 开始标注指定样本\n            _this.start_label_sample(res.data.content['sample'])\n\n        }).catch(function(error){\n            // do nothing\n            console.log(error)\n        })       \n    },\n    methods:{\n        //初始化 标注工具并渲染\n        initMap: function() {\n            // npm i ailabel\n            let drawingStyle = {}; // 绘制过程中样式\n                const gMap = new AILabel.Map(\"label-image\", {\n                    center: {x: 100, y: 100}, // 为了让图片居中\n                    zoom: 1000,\n                    mode: \"ban\", // PAN 可以平移和放大缩小   ban  可以平移 \n                    refreshDelayWhenZooming: true, // 缩放时是否允许刷新延时，性能更优\n                    zoomWhenDrawing: true,\n                    panWhenDrawing: false,\n                    zoomWheelRatio: 5,      // 控制滑轮缩放缩率[0, 10), 值越小，则缩放越快，反之越慢\n                    withHotKeys: false       // 关闭快捷键\n                });\n                \n                // 图片层添加\n                const gFirstImageLayer = new AILabel.Layer.Image(\n                    \"layer-image\", // id\n                    {\n                        src: require(\"../assets/logo.png\"),\n                        width: 200,\n                        height: 200,\n                        crossOrigin: false, // 如果跨域图片，需要设置为true\n                        position: { // 左上角相对中心点偏移量\n                            x: 0,\n                            y: 0\n                        },\n                    }, // imageInfo\n                    {name: \"第一个图片图层\"}, // props\n                    {zIndex: 5} // 这里写样式 层级\n                );\n                // click单击事件 这里可以直接修改单击触发 比如如果没触发可以直接把事件放进来写成单击一个点渲染\n                gMap.events.on(\"click\", point => {\n                    console.log(\"--click--\", point);\n                });\n                // data 代表r半径shape；data1代表sr半径shape\n                gMap.events.on(\"drawDone\", (type, data, data1) => {\n                    if (type === \"MARKER\") {\n                        const marker = new AILabel.Marker(\n                            `${+new Date()}`, // id\n                            {\n                                src: \"\",\n                                position: data,\n                                offset: {\n                                    x: 0,\n                                    y:0\n                                }\n                            }, // markerInfo\n                            {name: \"第一个marker注记\"} // props\n                        );\n                        marker.events.on(\"click\", marker => {\n                            gMap.markerLayer.removeMarkerById(marker.id);\n                        });\n                        gMap.markerLayer.addMarker(marker);\n                    }\n                    else if (type === \"POINT\") {\n                        if (this.label_metas['activate_label_index'] < 0){\n                                // do nothing\n                                return;\n                        }\n\n                        data['sr'] = 5;\n                        const pointFeature = new AILabel.Feature.Point(\n                            `${+new Date()}`, // id\n                            data, // shape\n                            {\n                                name: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_name'], \n                                label: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_index']  \n                            }, // prop\n                            {\n                                fillStyle: this.label_metas['label_category'][this.label_metas['activate_label_index']]['background_color'], \n                            } // style\n                        );\n                        this.gFirstFeatureLayer.addFeature(pointFeature);\n                    }\n                    // else if (type === \"CIRCLE\") {\n                    //     // data 代表r半径shape；data1代表sr半径shape\n                    //     const circleFeature = new AILabel.Feature.Circle(\n                    //         `${+new Date()}`, // id\n                    //         data, // data1代表屏幕坐标 shape\n                    //         {\n                    //             name: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_name'], \n                    //             label: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_index']\n                    //         },\n                    //         {fillStyle: \"#F4A460\", strokeStyle: \"#D2691E\", lineWidth: 2} // style\n                    //     );\n                    //     gFirstFeatureLayer.addFeature(circleFeature);\n                    // }\n                    else if (type === \"LINE\") {\n                        const scale = gMap.getScale();\n                        const width = drawingStyle.lineWidth / scale;\n                        const lineFeature = new AILabel.Feature.Line(\n                            `${+new Date()}`, // id\n                            {...data, width}, // shape\n                            {name: \"第一个矢量图层\"}, // props\n                            drawingStyle // style\n                        );\n                        gFirstFeatureLayer.addFeature(lineFeature);\n                    }\n                    // else if (type === \"POLYLINE\") {\n                    //     if (this.label_metas['activate_label_index'] < 0){\n                    //             // do nothing\n                    //             return;\n                    //     }\n                    //     // const scale = gMap.getScale();\n                    //     // const width = drawingStyle.lineWidth / scale;\n                    //     const polylineFeature = new AILabel.Feature.Polyline(\n                    //         `${+new Date()}`, // id\n                    //         {points: data, width}, // shape\n                    //         {\n                    //             name: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_name'], \n                    //             label: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_index']\n\n                    //         }, // props\n                    //         {\n                    //             fillStyle: this.label_metas['label_category'][this.label_metas['activate_label_index']]['background_color'], strokeStyle: this.label_metas['label_category'][this.label_metas['activate_label_index']]['color'], lineWidth: 2\n                    //         } // style\n                    //     );\n                    //     this.gFirstFeatureLayer.addFeature(polylineFeature);\n                    // }\n                    else if (type === \"RECT\") {\n                        if (this.label_metas['activate_label_index'] < 0){\n                            // do nothing\n                            return;\n                        }\n                        const rectFeature = new AILabel.Feature.Rect(\n                            `${+new Date()}`,      // id\n                            data,                  // shape\n                            {\n                                name: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_name'], \n                                label: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_index']\n                            },     // props\n                            {\n                                fillStyle: \"rgba(255,255,255,0.5)\", \n                                strokeStyle: this.label_metas['label_category'][this.label_metas['activate_label_index']]['color'], \n                                lineWidth: 2,\n                                fill: true,\n                            } // style\n                        );\n                        this.gFirstFeatureLayer.addFeature(rectFeature);\n                    }\n                    else if (type === \"POLYGON\") {\n                        if (this.label_metas['activate_label_index'] < 0){\n                                // do nothing\n                                return;\n                        }\n                        const polygonFeature = new AILabel.Feature.Polygon(\n                            `${+new Date()}`, // id\n                            {points: data}, // shape\n                            {                                   \n                                name: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_name'], \n                                label: this.label_metas['label_category'][this.label_metas['activate_label_index']]['class_index']\n                            }, // props\n                            {\n                                fillStyle: \"rgba(255,255,255,0.5)\",\n                                strokeStyle: this.label_metas['label_category'][this.label_metas['activate_label_index']]['color'], \n                                lineWidth: 2, \n                                fill: true,\n                            } // style\n                        );         \n                        this.gFirstFeatureLayer.addFeature(polygonFeature);\n                    \n                    }\n                }\n                );\n                // 视野范围发生变化\n                gMap.events.on(\"boundsChanged\", data => {\n                    console.log(\"--map boundsChanged--\");\n                });\n                // 在绘制模式下双击feature触发选中\n                gMap.events.on(\"featureSelected\", feature => {\n                    // 双击触发删除\n                    this.gFirstFeatureLayer.removeFeatureById(feature.id)\n                });\n                gMap.events.on(\"featureUnselected\", () => {\n                    // 取消featureSelected\n                    console.log('取消激活feature')\n                    gMap.setActiveFeature(null);\n                });\n                gMap.events.on(\"featureUpdated\", (feature, shape) => {\n                    console.log('feature updated')\n                    // feature.updateShape(shape);\n                    // const markerId = feature.props.deleteMarkerId;\n                    // const targetMarker = gMap.markerLayer.getMarkerById(markerId);\n                    // targetMarker.updatePosition(feature.getPoints()[1]);\n                });\n                gMap.events.on(\"featureDeleted\", ({id: featureId}) => {\n                    console.log('feature delete')\n                    // gFirstFeatureLayer.removeFeatureById(featureId);\n                });     \n            \n                // // 图片层相关事件监听\n                // gFirstImageLayer.events.on(\"loadStart\", (a, b) => {\n                //     console.log(\"--loadStart--\", a, b);\n                // });\n                // gFirstImageLayer.events.on(\"loadEnd\", (a, b) => {\n                //     console.log(\"--loadEnd--\", a, b);\n                // });\n                // gFirstImageLayer.events.on(\"loadError\", (a, b) => {\n                //     console.log(\"--loadError--\", a, b);\n                // });\n                // 添加到gMap对象\n                gMap.addLayer(gFirstImageLayer);\n                \n                const gFirstFeatureLayer = new AILabel.Layer.Feature(\n                    \"first-layer-feature\", // id\n                    {name: \"第一个矢量图层\"}, // props\n                    {zIndex: 10} // style\n                );\n                gMap.addLayer(gFirstFeatureLayer);\n            \n                //自适应\n                this.gFirstImageLayer = gFirstImageLayer;\n                this.gFirstFeatureLayer = gFirstFeatureLayer;\n                this.gMap = gMap;\n                window.onresize = function () {\n                    gMap && gMap.resize();\n                };\n            },\n            // 触发 工具功能 类型会自动触发工具内对应渲染的图形\n        setMode: function(mode) {\n                this.gMap.setMode(mode);\n                //  动态颜色可以在这里赋值 精确到某一个操作\n                var drawingStyle\n                // 后续对应模式处理\n                switch (mode) {\n                    case \"PAN\": {\n                        break;\n                    }\n                    case \"MARKER\": {\n                        // 忽略\n                        break;\n                    }\n                    case \"POINT\": {\n                        drawingStyle = {fillStyle: \"#9370DB\", strokeStyle:\"#f00\"};\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    // case \"CIRCLE\": {\n                    //     drawingStyle = {fillStyle: \"#9370DB\", strokeStyle: \"#f00\", lineWidth: 2};\n                    //     this.gMap.setDrawingStyle(drawingStyle);\n                    //     break;\n                    // }\n                    case \"LINE\": {\n                        drawingStyle = {strokeStyle: \"#FF0000\", lineJoin: \"round\", lineCap: \"round\", lineWidth: 5, arrow: false};\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    case \"POLYLINE\": {\n                        drawingStyle = {strokeStyle: \"#FF1493\", lineJoin: \"round\", lineCap: \"round\", lineWidth: 1}\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    case \"RECT\": {\n                        drawingStyle = {strokeStyle: \"#f00\", lineWidth: 1}\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    case \"POLYGON\": {\n                        drawingStyle = {strokeStyle: \"#00f\", fillStyle: \"#0f0\", globalAlpha: .3, lineWidth: 1, fill: true, stroke: true}\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    // case \"DRAWMASK\": {\n                    //     drawingStyle = {strokeStyle: \"rgba(255, 0, 0, .5)\", fillStyle: \"#00f\", lineWidth: 50}\n                    //     this.gMap.setDrawingStyle(drawingStyle);\n                    //     break;\n                    // }\n                    // case \"CLEARMASK\": {\n                    //     drawingStyle = {fillStyle: \"#00f\", lineWidth: 30}\n                    //     this.gMap.setDrawingStyle(drawingStyle);\n                    //     break;\n                    // }\n                    case \"TEXT\": {\n                        drawingStyle = {fillStyle: \"#00f\", lineWidth: 30}\n                        this.gMap.setDrawingStyle(drawingStyle);\n                        break;\n                    }\n                    default:\n                        break;\n                }\n        },\n        switch_label_category: function(label_type, label_index, label_info){\n            // if(label_type == 'RECT'){\n                // 标注框过程\n                var label_color = label_info['color']\n                // 切换拖拽时的颜色\n                var drawingStyle = {\n                    strokeStyle: label_color, \n                    lineWidth: 1,\n\n                }\n                this.gMap.setDrawingStyle(drawingStyle);\n\n                // 切换激活标注\n                this.label_metas['activate_label_index'] = label_index;     \n            // }\n        },\n        remove_annotations: function(){\n            var allfeatures = this.gFirstFeatureLayer.getAllFeatures();\n            for(var f in allfeatures){\n                this.gFirstFeatureLayer.removeFeatureById(allfeatures[f].id);\n            }\n        },\n        update_annotations: function(){\n            var label_info_result = []\n\n            // 实例级别标签\n            var features = this.gFirstFeatureLayer.getAllFeatures();\n            for(var f in features){\n                if (features[f].type == 'RECT'){\n                    var width = features[f].shape.width;\n                    var height = features[f].shape.height;\n                    var x = features[f].shape.x;\n                    var y = features[f].shape.y;\n                    var label = features[f].props.label\n                    label_info_result.push({\n                        'shape':{\n                            width: width,\n                            height: height,\n                            x:x,\n                            y:y\n                        },\n                        'type': 'RECT',\n                        'label': label,\n                    })\n                }\n                else if(features[f].type == 'POINT'){\n                    label_info_result.push({\n                        'shape':{\n                            x:features[f].shape.x,\n                            y:features[f].shape.y,\n                            sr:features[f].shape.sr,\n                        },\n                        'type': 'POINT',\n                        'label': features[f].props.label,\n                    })\n                }\n                else if(features[f].type == 'POLYGON'){\n                    label_info_result.push({\n                        'shape':{\n                            'points': features[f].shape.points\n                        },\n                        'type': 'POLYGON',\n                        'label': features[f].props.label,\n                    })\n                }\n            }\n            \n            // 图片级别标签\n            if(this.choices.length > 0){\n                label_info_result.push({\n                    'type': 'CHOICES',\n                    'label': this.choices,\n                })\n            }\n\n            this.activate_sample['label_info'] = label_info_result;\n            this.samples[this.activate_sample['sample_id']]['label_info'] = label_info_result;\n            var _this = this;\n            let params = new FormData();  \n            params.append('sample', JSON.stringify(this.activate_sample))\n\n            _this.axios.post(\n                '/antgo/api/label/sample/update/', params).then(function(res){\n                // 成功更新\n                var update_sample_id = res.data.content['sample_id'];\n                // 返回更新后的信息\n                _this.samples[update_sample_id]['completed_time'] = res.data.content['completed_time'];\n                _this.samples[update_sample_id]['update_time'] = res.data.content['update_time'];\n                _this.samples[update_sample_id]['state'] = res.data.content['sample_state'];\n\n                _this.activate_sample['completed_time'] = res.data.content['completed_time'];\n                _this.activate_sample['update_time'] = res.data.content['update_time'];\n                _this.activate_sample['state'] = res.data.content['sample_state'];\n\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })  \n        },\n        show_anno_info: function(sample){\n            // 从后台获取标注数据\n            // TODO\n            // alert(sample)\n        },\n        start_label_sample: function(sample){\n            // 设置当前激活的样本\n            this.activate_sample = sample;\n\n            // 设置当前标注图片，并清空已用数据\n            this.gMap.removeLayerById(this.gFirstImageLayer.id);\n\n            // 图片层添加\n            const gFirstImageLayer = new AILabel.Layer.Image(\n                \"layer-image\", // id\n                {\n                    src: sample['image_file'],\n                    width: sample['width'],\n                    height: sample['height'],\n                    crossOrigin: false,         // 如果跨域图片，需要设置为true\n                    position: {                 // 左上角相对中心点偏移量\n                        x: 0,\n                        y: 0\n                    },\n                }, // imageInfo\n                {name: sample['image_file']},\n                {zIndex: 5}\n            );\n            this.gMap.addLayer(gFirstImageLayer);\n            this.gFirstImageLayer = gFirstImageLayer;\n\n            // 重置当前状态\n            this.clear_state();\n\n            // 从后台获得当前样本历史数据 并添加初始标注结果\n            var label_info = sample['label_info'];\n            for(var i in label_info){\n                var data = label_info[i];\n\n                if(data['type'] == 'RECT'){\n                    const rectFeature = new AILabel.Feature.Rect(\n                        `${+new Date()}`,      // id\n                        data['shape'],         // shape\n                        {\n                            name: this.label_metas['label_category'][data['label']]['class_name'],\n                            label: this.label_metas['label_category'][data['label']]['class_index']\n                        }, // props\n                        {\n                            fillStyle: \"rgba(255,255,255,0.5)\", \n                            strokeStyle: this.label_metas['label_category'][data['label']]['color'], \n                            lineWidth: 2,\n                            fill: true,\n                        } // style\n                        \n                    );\n                    this.gFirstFeatureLayer.addFeature(rectFeature);\n                }\n                else if(data['type'] == 'POINT'){\n                    const pointFeature = new AILabel.Feature.Point(\n                        `${+new Date()}`,      // id\n                        data['shape'],         // shape\n                        {\n                            name: this.label_metas['label_category'][data['label']]['class_name'],\n                            label: this.label_metas['label_category'][data['label']]['class_index']\n                        },     // props\n                        {fillStyle: this.label_metas['label_category'][data['label']]['background_color']} // style\n                    );\n                    this.gFirstFeatureLayer.addFeature(pointFeature);\n                }\n                else if(data['type'] == 'POLYGON'){\n                    const polygonFeature = new AILabel.Feature.Polygon(\n                        `${+new Date()}`, // id\n                        {points: data['shape']['points']}, // shape\n                        {                                   \n                            name: this.label_metas['label_category'][data['label']]['class_name'],\n                            label: this.label_metas['label_category'][data['label']]['class_index']\n                        }, // props\n                        {\n                            fillStyle: \"rgba(255,255,255,0.5)\", \n                            strokeStyle: this.label_metas['label_category'][data['label']]['color'], \n                            lineWidth: 2, \n                            fill: true,\n                        } // style\n                    );   \n                    this.gFirstFeatureLayer.addFeature(polygonFeature);  \n                          \n                }\n                else if(data['type'] == 'CHOICES'){\n                    this.choices = data['choices']\n                }\n            }\n\n        },\n        clear_state: function(){\n                // 清空当前绘图标签\n                this.label_metas.activate_label_index = -1;\n\n                // 清空图层\n                var features = this.gFirstFeatureLayer.getAllFeatures();\n                for(var f in features){\n                    this.gFirstFeatureLayer.removeFeatureById(features[f].id)\n                }\n\n                // 重置绘图默认状态\n                var drawingStyle = {strokeStyle: \"#f00\", lineWidth: 1}\n                this.gMap.setDrawingStyle(drawingStyle);\n                \n                // \n                this.choices = []\n        },\n        next: function(){\n            var _this = this;\n            // next sample label\n            _this.axios.get(\n                '/antgo/api/label/sample/next/').then(function(res){\n                if(res.data.content['stage'] == 'finish'){\n                    // 跳转到项目页面\n                    _this.$router.push({path: '/'})\n                    return\n                }\n\n                // 1.step 开始标注指定样本\n                _this.start_label_sample(res.data.content['sample'])\n\n                // 2.step 根据当前的返回的下一个等待标注样本，\n                // 以防止，左侧样本列表还不存在此样本\n                if(_this.now_page * _this.page_size <= res.data.content['sample']['sample_id']){\n                    // 返回从当前已经加载的样本到指定此处的偏移之间的所有样本\n                    _this.axios.get(\n                        '/antgo/api/label/sample/',\n                        {\n                            params:{\n                                page_index: _this.now_page,\n                                index_offset: res.data.content['sample']['sample_id'],\n                                page_size: 50\n                            }\n                        }\n                    ).then(function(res1){\n                        var total_num = res1.data.content['total_sample_num'];\n                        for(var i in res1.data.content['page_samples']){\n                            _this.samples.push(res1.data.content['page_samples'][i])\n                        }\n                        if(_this.samples.length < total_num){\n                            _this.more_show = true;\n                        }\n                        else{\n                            _this.more_show = false;\n                        }\n                        _this.now_page = res1.data.content['page_index'];\n                    }).catch(function(error){\n                        // do nothing\n                    })   \n\n                }\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })             \n        },\n        select: function(sample_i){\n            // alert(1)\n            var _this = this;\n            // next sample label\n            _this.axios.get(\n                '/antgo/api/label/sample/get/', {\n                    params:{\n                        sample_i:sample_i\n                    }\n                }).then(function(res){\n                // 开始标注指定样本\n                _this.start_label_sample(res.data.content['sample'])\n                \n\n            }).catch(function(error){\n                // do nothing\n                console.log(error)\n            })  \n        },\n        scrollMore: function(index) { \n            // 滚动加载更多\n            var _this = this;\n            \n            var params = {}\n            if(index < 0){\n                params = {\n                    page_index: _this.now_page,\n                    page_size: 50\n                }\n            }\n            else{\n                params = {\n                    page_index: _this.now_page,\n                    index_offset: index,\n                    page_size: 50\n                }\n            }\n            _this.axios.get(\n                '/antgo/api/label/sample/',\n                {\n                    params: params\n                }\n            ).then(function(res){\n                var total_num = res.data.content['total_sample_num'];\n                for(var i in res.data.content['page_samples']){\n                    _this.samples.push(res.data.content['page_samples'][i])\n                }\n                if(_this.samples.length < total_num){\n                    _this.more_show = true;\n                }\n                else{\n                    _this.more_show = false;\n                }\n                _this.now_page = res.data.content['page_index'];\n            }).catch(function(error){\n                // do nothing\n            })            \n        },    \n        handleScroll: function(e){\n            //变量scrollTop是滚动条滚动时，距离顶部的距离\n            var scrollTop = e.target.scrollTop;\n            //变量windowHeight是可视区的高度\n            var windowHeight = e.target.clientHeight;\n            //变量scrollHeight是滚动条的总高度\n            var scrollHeight = e.target.scrollHeight;\n            //滚动条到底部的条件\n            if(scrollTop + windowHeight == scrollHeight){\n                //写后台加载数据的函数\n                this.scrollMore(-1)\n            }\n        }\n    }\n }\n</script>\n\n<style>\nhr {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n  border: 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.1);\n}\n.dm-table__cell {\n    align-items: center;\n    box-sizing: border-box;\n    display: flex;\n    flex: 150 0 auto;\n    max-width: min-content;\n    min-width: min-content;\n    overflow: hidden;\n    padding: 5px;\n    position: relative;\n    width: fit-content;\n    word-break: break-word;\n}\n.row_activate{\n}\n.row_activate_selected{\n    background-color: #0000ff26\n}\n.row_activate:hover{\n    background-color: #0000ff26\n}\n.lsf-space_direction_horizontal {\n    align-items: center;\n    grid-auto-flow: column;\n}\n.lsf-space_size_small {\n    grid-gap: 8px;\n}\n.lsf-space {\n    grid-gap: 16px;\n    display: grid;\n}\n.lsf-userpic {\n    align-items: center;\n    background: #f5f5f5;\n    border-radius: 13.5px;\n    box-shadow: inset 0 0 0 1px rgb(0 0 0 / 10%);\n    display: flex;\n    height: 28px;\n    justify-content: center;\n    overflow: hidden;\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    width: 28px;\n}\n.lsf-userpic img {\n    font-size: 12px;\n    height: 100%;\n    line-height: 22px;\n    -o-object-fit: cover;\n    object-fit: cover;\n    opacity: 0;\n    position: absolute;\n    width: 100%;\n}\n.lsf-annotations-list__create, .lsf-annotations-list__entity {\n    align-items: center;\n    cursor: pointer;\n    display: flex;\n    height: 48px;\n    padding: 0 16px;\n}\n.lsf-userpic__username {\n    display: block;\n    font-family: Roboto;\n    font-size: 12px;\n    font-weight: 700;\n    line-height: 22px;\n    opacity: .4;\n}\n.lsf-space_direction_vertical {\n    grid-auto-flow: row;\n    grid-auto-rows: -webkit-max-content;\n    grid-auto-rows: max-content;\n    justify-content: center;\n}\n.lsf-space_collapsed, .lsf-space_size_none {\n    grid-gap: 0;\n}\n.lsf-annotations-list__user {\n    display: flex;\n    font-size: 14px;\n    line-height: 16px;\n    max-width: 165px;\n}\n.lsf-annotations-list__name {\n    flex: 1;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n}\n.lsf-annotations-list__entity-id {\n    flex: none;\n    font-size: 11px;\n    opacity: .5;\n    padding-left: 5px;\n}\n.lsf-annotations-list__created {\n    color: rgba(0,0,0,.4);\n    font-size: 11px;\n    line-height: 13px;\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Label.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Label.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Label.vue?vue&type=template&id=0076df40&\"\nimport script from \"./Label.vue?vue&type=script&lang=js&\"\nexport * from \"./Label.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Label.vue?vue&type=style&index=0&id=0076df40&prod&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","staticStyle","attrs","staticClass","_v","_l","samples","sample","sample_i","key","class","activate_sample","on","$event","select","_s","length","label_operator","remove_annotations","update_annotations","next","label_metas","t","index","style","switch_label_category","label_type","directives","name","rawName","value","choices","expression","domProps","Array","isArray","_i","$$a","$$el","target","$$c","checked","$$v","$$i","concat","slice","staticRenderFns","data","img","gMap","gFirstFeatureLayer","gFirstImageLayer","label_category","label_level","activate_label_index","now_page","page_size","more_show","task_name","task_type","mounted","_this","catch","console","params","then","methods","initMap","center","x","y","zoom","mode","refreshDelayWhenZooming","zoomWhenDrawing","panWhenDrawing","zoomWheelRatio","withHotKeys","src","width","height","crossOrigin","position","zIndex","offset","marker","label","fillStyle","drawingStyle","strokeStyle","lineWidth","fill","points","id","window","setMode","lineJoin","lineCap","arrow","globalAlpha","stroke","label_info_result","sr","show_anno_info","start_label_sample","clear_state","page_index","index_offset","path","scrollMore","handleScroll","component"],"sourceRoot":""}